buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

group = 'net.tropicraft'
archivesBaseName = 'Tropicraft'

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false');

ext.buildnumber = 0

if (System.getenv('GITHUB_RUN_NUMBER')) {
    project.buildnumber = System.getenv('GITHUB_RUN_NUMBER')
    version = "${mod_version}-${release_type}+${buildnumber}-gha"
} else {
    project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'
    version = "${mod_version}-${release_type}+${buildnumber}"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	mappings channel: 'snapshot', version: '20210309-1.16.5'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
        	taskName 'tropicraft_client'
        	
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=tropicraft.mixins.json"

            mods {
                tropicraft {
                    source sourceSets.main
                }
            }
        }

        server {
        	taskName 'tropicraft_server'
        
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=tropicraft.mixins.json"

            mods {
                tropicraft {
                    source sourceSets.main
                }
            }
        }
        
        data {
        	taskName 'tropicraft_data'
        
            workingDirectory project.file('run')
            
            environment 'target', 'fmluserdevdata'

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=tropicraft.mixins.json"

            mods {
                tropicraft {
                    source sourceSets.main
                }
            }
            
			args '--mod', 'tropicraft', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
				 '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"' 
			
        }
    }
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

repositories {
	mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "tropicraftmod",
            "Specification-Vendor": "Tropicraft",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Tropicraft",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "tropicraft.mixins.json"
        ])
    }
}

tasks.curseforge.enabled = !dev && project.hasProperty('cojo_curseforge_key')

curseforge {
    if (project.hasProperty('cojo_curseforge_key')) {
        apiKey = project.cojo_curseforge_key
    }

    project {
        id = project.project_id
        changelog = System.getenv('CHANGELOG') == null || System.getenv('CHANGELOG').equals('none') ? '' : System.getenv('CHANGELOG')
        changelogType = 'html'
        releaseType = project.release_type
        addGameVersion project.minecraft_version
        mainArtifact(jar) {
            displayName = archivesBaseName + " - ${version}"
        }
    }
}

mixin {
    add sourceSets.main, "tropicraft.refmap.json"
}

if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}
