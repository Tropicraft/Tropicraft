// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false');

version = "${mod_version}.${buildnumber}"
group= "net.tropicraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "tropicraft"

sourceCompatibility = targetCompatibility = '1.8'

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"

    mappings = "snapshot_20171116"

    replaceIn "Info.java"
    replace "@VERSION@", project.version
}

jar.appendix = "MC${minecraft_version}"
sourceJar.appendix = jar.appendix

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft_version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

String getChangelogText() {
    def changelogFile = file('changelog.txt')
    String str = ''
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (it.size() > 1) {
            def temp = it
            if (lineCount == 0) {
                temp = "Tropicraft ${version}"
                temp = "<h2>$temp</h2>"
            } else if (it.startsWith('-')) {
                temp = "&nbsp;&nbsp;&nbsp;$temp"
                temp = temp.replaceAll("(\\S+\\/\\S+)#([0-9]+)\\b", "<a href=\"https://github.com/\$1/issues/\$2\">\$0</a>");
                temp = temp.replaceAll("#([0-9]+)\\b(?!<\\/a>)", "<a href=\"https://github.com/$github_project/issues/\$1\">\$0</a>");
            } else {
                temp = "<h4>$temp</h4>"
            }
            str += "$temp<br/>"
            lineCount++
            return
        } else {
            done = true
        }
    }
    return str
}

tasks.curseforge.enabled = !dev && project.hasProperty('cojo_curseforge_key')
    
curseforge {
    if (project.hasProperty('cojo_curseforge_key')) {
        apiKey = project.cojo_curseforge_key
    }

    project {
        id = project.projectId
        changelog = System.getenv('CHANGELOG') == null || System.getenv('CHANGELOG').equals('none') ? getChangelogText() : System.getenv('CHANGELOG')
        changelogType = 'html'
        releaseType = project.curse_type
        mainArtifact(jar) {
            displayName = "Tropicraft - ${version}"
        }
    }
}
